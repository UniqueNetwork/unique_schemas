// @ts-nocheck
// eslint-disable
// This file is generated by create-validator-ts
import Ajv from 'ajv';
import type * as apiTypes from './types';

export const SCHEMA = {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "definitions": {
        "TokenPropertyPermissionValue": {
            "type": "object",
            "properties": {
                "mutable": {
                    "type": "boolean"
                },
                "collectionAdmin": {
                    "type": "boolean"
                },
                "tokenOwner": {
                    "type": "boolean"
                }
            },
            "required": [
                "mutable",
                "collectionAdmin",
                "tokenOwner"
            ],
            "additionalProperties": false
        },
        "Property": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "key",
                "value"
            ],
            "additionalProperties": false
        },
        "TokenPropertyPermission": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "permission": {
                    "$ref": "#/definitions/TokenPropertyPermissionValue"
                }
            },
            "required": [
                "key",
                "permission"
            ],
            "additionalProperties": false
        },
        "TokenMediaType": {
            "type": "string",
            "enum": [
                "image",
                "video",
                "audio",
                "3d",
                "file",
                "link"
            ]
        },
        "SubType": {
            "type": "string",
            "enum": [
                "youtube",
                "vimeo",
                "soundcloud",
                "spotify",
                "deezer",
                "tiktok",
                "instagram",
                "twitter",
                "facebook",
                "twitch",
                "dailymotion",
                "mixcloud",
                "figma"
            ]
        },
        "TokenMediaInfo": {
            "type": "object",
            "properties": {
                "type": {
                    "$ref": "#/definitions/TokenMediaType"
                },
                "subType": {
                    "$ref": "#/definitions/SubType"
                },
                "title": {
                    "type": "object",
                    "properties": {
                        "_": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "_"
                    ],
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "order": {
                    "type": "number"
                },
                "main": {
                    "type": "boolean"
                },
                "mimeType": {
                    "type": "string"
                },
                "loop": {
                    "type": "boolean"
                },
                "posterFor": {
                    "type": "string"
                }
            },
            "additionalProperties": false
        },
        "RoyaltyKind": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                }
            },
            "required": [
                "addresses"
            ],
            "additionalProperties": false
        },
        "RoyaltySchema": {
            "type": "object",
            "properties": {
                "royaltyVersion": {
                    "type": "number"
                },
                "decimals": {
                    "type": "number"
                },
                "primary": {
                    "$ref": "#/definitions/RoyaltyKind"
                },
                "secondary": {
                    "$ref": "#/definitions/RoyaltyKind"
                }
            },
            "required": [
                "royaltyVersion"
            ],
            "additionalProperties": false
        },
        "UniqueCollectionSchemaV2": {
            "type": "object",
            "properties": {
                "schemaName": {
                    "type": "string"
                },
                "schemaVersion": {
                    "type": "string"
                },
                "baseUrl": {
                    "type": "string"
                },
                "ipfsGateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "defaultLocale": {
                    "type": "string"
                },
                "instantiateWith": {
                    "type": "object",
                    "properties": {
                        "defaultPermission": {
                            "$ref": "#/definitions/TokenPropertyPermissionValue"
                        },
                        "propertyCommonPermission": {
                            "$ref": "#/definitions/TokenPropertyPermissionValue"
                        },
                        "allowERC721MetadataTokenURI": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "$ref": "#/definitions/TokenPropertyPermissionValue"
                                }
                            ]
                        }
                    },
                    "additionalProperties": false
                },
                "info": {},
                "cover": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "url": {
                            "type": "string"
                        },
                        "suffix": {
                            "type": "string"
                        },
                        "cid": {
                            "type": "string"
                        },
                        "title": {
                            "type": "object",
                            "properties": {
                                "_": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "_"
                            ],
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "mimeType": {
                            "type": "string"
                        },
                        "loop": {
                            "type": "boolean"
                        }
                    }
                },
                "media": {
                    "type": "object",
                    "properties": {
                        "permission": {
                            "$ref": "#/definitions/TokenPropertyPermissionValue"
                        },
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "type": {
                                        "$ref": "#/definitions/TokenMediaType"
                                    },
                                    "required": {
                                        "type": "boolean"
                                    },
                                    "permission": {
                                        "$ref": "#/definitions/TokenPropertyPermissionValue"
                                    },
                                    "subType": {
                                        "$ref": "#/definitions/SubType"
                                    },
                                    "title": {
                                        "type": "object",
                                        "properties": {
                                            "_": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "_"
                                        ],
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "order": {
                                        "type": "number"
                                    },
                                    "main": {
                                        "type": "boolean"
                                    },
                                    "mimeType": {
                                        "type": "string"
                                    },
                                    "loop": {
                                        "type": "boolean"
                                    },
                                    "posterFor": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "schema"
                    ],
                    "additionalProperties": false
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "permission": {
                            "$ref": "#/definitions/TokenPropertyPermissionValue"
                        },
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "optional": {
                                        "type": "boolean"
                                    },
                                    "enumValues": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "anyOf": [
                                                {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "order": {
                                                            "type": "number"
                                                        },
                                                        "_": {
                                                            "type": "number"
                                                        }
                                                    },
                                                    "required": [
                                                        "_"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    },
                                                    "properties": {
                                                        "order": {
                                                            "type": "number"
                                                        },
                                                        "_": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "_"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "permission": {
                                        "$ref": "#/definitions/TokenPropertyPermissionValue"
                                    },
                                    "order": {
                                        "type": "number"
                                    },
                                    "title": {
                                        "type": "object",
                                        "properties": {
                                            "_": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "_"
                                        ],
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "integer",
                                            "float",
                                            "boolean",
                                            "timestamp",
                                            "string",
                                            "url",
                                            "isoDate",
                                            "time",
                                            "colorRgba",
                                            "colorLch"
                                        ]
                                    },
                                    "array": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "title",
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "schema"
                    ],
                    "additionalProperties": false
                },
                "royalties": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "permission": {
                            "$ref": "#/definitions/TokenPropertyPermissionValue"
                        },
                        "royaltyVersion": {
                            "type": "number"
                        },
                        "decimals": {
                            "type": "number"
                        },
                        "primary": {
                            "$ref": "#/definitions/RoyaltyKind"
                        },
                        "secondary": {
                            "$ref": "#/definitions/RoyaltyKind"
                        }
                    },
                    "required": [
                        "royaltyVersion"
                    ]
                }
            },
            "required": [
                "schemaName",
                "schemaVersion",
                "baseUrl",
                "cover"
            ],
            "additionalProperties": false
        },
        "UniqueCollectionSchemaV2InCollection": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "schemaName": {
                    "type": "string"
                },
                "schemaVersion": {
                    "type": "string"
                },
                "baseUrl": {
                    "type": "string"
                },
                "ipfsGateways": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "defaultLocale": {
                    "type": "string"
                },
                "instantiateWith": {
                    "type": "object",
                    "properties": {
                        "defaultPermission": {
                            "$ref": "#/definitions/TokenPropertyPermissionValue"
                        },
                        "propertyCommonPermission": {
                            "$ref": "#/definitions/TokenPropertyPermissionValue"
                        },
                        "allowERC721MetadataTokenURI": {
                            "anyOf": [
                                {
                                    "type": "boolean"
                                },
                                {
                                    "$ref": "#/definitions/TokenPropertyPermissionValue"
                                }
                            ]
                        }
                    },
                    "additionalProperties": false
                },
                "info": {},
                "cover": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "url": {
                            "type": "string"
                        },
                        "suffix": {
                            "type": "string"
                        },
                        "cid": {
                            "type": "string"
                        },
                        "title": {
                            "type": "object",
                            "properties": {
                                "_": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "_"
                            ],
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "mimeType": {
                            "type": "string"
                        },
                        "loop": {
                            "type": "boolean"
                        }
                    }
                },
                "media": {
                    "type": "object",
                    "properties": {
                        "permission": {
                            "$ref": "#/definitions/TokenPropertyPermissionValue"
                        },
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "type": {
                                        "$ref": "#/definitions/TokenMediaType"
                                    },
                                    "required": {
                                        "type": "boolean"
                                    },
                                    "permission": {
                                        "$ref": "#/definitions/TokenPropertyPermissionValue"
                                    },
                                    "subType": {
                                        "$ref": "#/definitions/SubType"
                                    },
                                    "title": {
                                        "type": "object",
                                        "properties": {
                                            "_": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "_"
                                        ],
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "order": {
                                        "type": "number"
                                    },
                                    "main": {
                                        "type": "boolean"
                                    },
                                    "mimeType": {
                                        "type": "string"
                                    },
                                    "loop": {
                                        "type": "boolean"
                                    },
                                    "posterFor": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "schema"
                    ],
                    "additionalProperties": false
                },
                "attributes": {
                    "type": "object",
                    "properties": {
                        "permission": {
                            "$ref": "#/definitions/TokenPropertyPermissionValue"
                        },
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "additionalProperties": false,
                                "properties": {
                                    "optional": {
                                        "type": "boolean"
                                    },
                                    "enumValues": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "anyOf": [
                                                {
                                                    "type": "object",
                                                    "additionalProperties": false,
                                                    "properties": {
                                                        "order": {
                                                            "type": "number"
                                                        },
                                                        "_": {
                                                            "type": "number"
                                                        }
                                                    },
                                                    "required": [
                                                        "_"
                                                    ]
                                                },
                                                {
                                                    "type": "object",
                                                    "additionalProperties": {
                                                        "type": "string"
                                                    },
                                                    "properties": {
                                                        "order": {
                                                            "type": "number"
                                                        },
                                                        "_": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "_"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "permission": {
                                        "$ref": "#/definitions/TokenPropertyPermissionValue"
                                    },
                                    "order": {
                                        "type": "number"
                                    },
                                    "title": {
                                        "type": "object",
                                        "properties": {
                                            "_": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "_"
                                        ],
                                        "additionalProperties": {
                                            "type": "string"
                                        }
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "integer",
                                            "float",
                                            "boolean",
                                            "timestamp",
                                            "string",
                                            "url",
                                            "isoDate",
                                            "time",
                                            "colorRgba",
                                            "colorLch"
                                        ]
                                    },
                                    "array": {
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "title",
                                    "type"
                                ]
                            }
                        }
                    },
                    "required": [
                        "schema"
                    ],
                    "additionalProperties": false
                },
                "royalties": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "permission": {
                            "$ref": "#/definitions/TokenPropertyPermissionValue"
                        },
                        "royaltyVersion": {
                            "type": "number"
                        },
                        "decimals": {
                            "type": "number"
                        },
                        "primary": {
                            "$ref": "#/definitions/RoyaltyKind"
                        },
                        "secondary": {
                            "$ref": "#/definitions/RoyaltyKind"
                        }
                    },
                    "required": [
                        "royaltyVersion"
                    ]
                }
            },
            "required": [
                "baseUrl",
                "cover"
            ]
        },
        "SchemaBasedAttributeInToken": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "_": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "_"
                                ],
                                "additionalProperties": false
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "_": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "_"
                                ],
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        ]
                    }
                },
                "enumKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "additionalProperties": false
        },
        "DynamicAttributeInToken": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "_": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "_"
                                ],
                                "additionalProperties": false
                            },
                            {
                                "type": "object",
                                "properties": {
                                    "_": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "_"
                                ],
                                "additionalProperties": {
                                    "type": "string"
                                }
                            }
                        ]
                    }
                },
                "order": {
                    "type": "number"
                },
                "title": {
                    "type": "object",
                    "properties": {
                        "_": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "_"
                    ],
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "integer",
                        "float",
                        "boolean",
                        "timestamp",
                        "string",
                        "url",
                        "isoDate",
                        "time",
                        "colorRgba",
                        "colorLch"
                    ]
                },
                "array": {
                    "type": "boolean"
                }
            },
            "required": [
                "title",
                "type",
                "values"
            ]
        },
        "TokenAttributeItem": {
            "anyOf": [
                {
                    "$ref": "#/definitions/SchemaBasedAttributeInToken"
                },
                {
                    "$ref": "#/definitions/DynamicAttributeInToken"
                }
            ]
        },
        "UniqueTokenV2": {
            "type": "object",
            "properties": {
                "common": {
                    "type": "object",
                    "properties": {
                        "preview": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "url": {
                                    "type": "string"
                                },
                                "suffix": {
                                    "type": "string"
                                },
                                "cid": {
                                    "type": "string"
                                },
                                "title": {
                                    "type": "object",
                                    "properties": {
                                        "_": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "_"
                                    ],
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                },
                                "mimeType": {
                                    "type": "string"
                                },
                                "loop": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "defaultLocale": {
                            "type": "string"
                        },
                        "name": {
                            "type": "object",
                            "properties": {
                                "_": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "_"
                            ],
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "description": {
                            "type": "object",
                            "properties": {
                                "_": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "_"
                            ],
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "info": {},
                        "ERC721TokenURI": {
                            "type": "string"
                        }
                    },
                    "additionalProperties": false
                },
                "media": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                            "url": {
                                "type": "string"
                            },
                            "suffix": {
                                "type": "string"
                            },
                            "cid": {
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/definitions/TokenMediaType"
                            },
                            "subType": {
                                "$ref": "#/definitions/SubType"
                            },
                            "title": {
                                "type": "object",
                                "properties": {
                                    "_": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "_"
                                ],
                                "additionalProperties": {
                                    "type": "string"
                                }
                            },
                            "order": {
                                "type": "number"
                            },
                            "main": {
                                "type": "boolean"
                            },
                            "mimeType": {
                                "type": "string"
                            },
                            "loop": {
                                "type": "boolean"
                            },
                            "posterFor": {
                                "type": "string"
                            }
                        }
                    }
                },
                "royalties": {
                    "$ref": "#/definitions/RoyaltySchema"
                },
                "attributes": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/TokenAttributeItem"
                    }
                }
            },
            "additionalProperties": false
        }
    }
};
const ajv = new Ajv({ removeAdditional: true }).addSchema(SCHEMA, "SCHEMA");
export function validateTokenPropertyPermissionValue(payload: unknown): apiTypes.TokenPropertyPermissionValue {
  /** Schema is defined in {@link SCHEMA.definitions.TokenPropertyPermissionValue } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/TokenPropertyPermissionValue");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid TokenPropertyPermissionValue: ' + ajv.errorsText(validator.errors, {dataVar: "TokenPropertyPermissionValue"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isTokenPropertyPermissionValue(payload: unknown): payload is apiTypes.TokenPropertyPermissionValue {
  try {
    validateTokenPropertyPermissionValue(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateProperty(payload: unknown): apiTypes.Property {
  /** Schema is defined in {@link SCHEMA.definitions.Property } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/Property");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid Property: ' + ajv.errorsText(validator.errors, {dataVar: "Property"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isProperty(payload: unknown): payload is apiTypes.Property {
  try {
    validateProperty(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateTokenPropertyPermission(payload: unknown): apiTypes.TokenPropertyPermission {
  /** Schema is defined in {@link SCHEMA.definitions.TokenPropertyPermission } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/TokenPropertyPermission");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid TokenPropertyPermission: ' + ajv.errorsText(validator.errors, {dataVar: "TokenPropertyPermission"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isTokenPropertyPermission(payload: unknown): payload is apiTypes.TokenPropertyPermission {
  try {
    validateTokenPropertyPermission(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateTokenMediaType(payload: unknown): apiTypes.TokenMediaType {
  /** Schema is defined in {@link SCHEMA.definitions.TokenMediaType } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/TokenMediaType");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid TokenMediaType: ' + ajv.errorsText(validator.errors, {dataVar: "TokenMediaType"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isTokenMediaType(payload: unknown): payload is apiTypes.TokenMediaType {
  try {
    validateTokenMediaType(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateSubType(payload: unknown): apiTypes.SubType {
  /** Schema is defined in {@link SCHEMA.definitions.SubType } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/SubType");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid SubType: ' + ajv.errorsText(validator.errors, {dataVar: "SubType"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isSubType(payload: unknown): payload is apiTypes.SubType {
  try {
    validateSubType(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateTokenMediaInfo(payload: unknown): apiTypes.TokenMediaInfo {
  /** Schema is defined in {@link SCHEMA.definitions.TokenMediaInfo } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/TokenMediaInfo");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid TokenMediaInfo: ' + ajv.errorsText(validator.errors, {dataVar: "TokenMediaInfo"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isTokenMediaInfo(payload: unknown): payload is apiTypes.TokenMediaInfo {
  try {
    validateTokenMediaInfo(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateRoyaltyKind(payload: unknown): apiTypes.RoyaltyKind {
  /** Schema is defined in {@link SCHEMA.definitions.RoyaltyKind } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/RoyaltyKind");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid RoyaltyKind: ' + ajv.errorsText(validator.errors, {dataVar: "RoyaltyKind"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isRoyaltyKind(payload: unknown): payload is apiTypes.RoyaltyKind {
  try {
    validateRoyaltyKind(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateRoyaltySchema(payload: unknown): apiTypes.RoyaltySchema {
  /** Schema is defined in {@link SCHEMA.definitions.RoyaltySchema } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/RoyaltySchema");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid RoyaltySchema: ' + ajv.errorsText(validator.errors, {dataVar: "RoyaltySchema"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isRoyaltySchema(payload: unknown): payload is apiTypes.RoyaltySchema {
  try {
    validateRoyaltySchema(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateUniqueCollectionSchemaV2(payload: unknown): apiTypes.UniqueCollectionSchemaV2 {
  /** Schema is defined in {@link SCHEMA.definitions.UniqueCollectionSchemaV2 } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/UniqueCollectionSchemaV2");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid UniqueCollectionSchemaV2: ' + ajv.errorsText(validator.errors, {dataVar: "UniqueCollectionSchemaV2"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isUniqueCollectionSchemaV2(payload: unknown): payload is apiTypes.UniqueCollectionSchemaV2 {
  try {
    validateUniqueCollectionSchemaV2(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateUniqueCollectionSchemaV2InCollection(payload: unknown): apiTypes.UniqueCollectionSchemaV2InCollection {
  /** Schema is defined in {@link SCHEMA.definitions.UniqueCollectionSchemaV2InCollection } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/UniqueCollectionSchemaV2InCollection");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid UniqueCollectionSchemaV2InCollection: ' + ajv.errorsText(validator.errors, {dataVar: "UniqueCollectionSchemaV2InCollection"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isUniqueCollectionSchemaV2InCollection(payload: unknown): payload is apiTypes.UniqueCollectionSchemaV2InCollection {
  try {
    validateUniqueCollectionSchemaV2InCollection(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateSchemaBasedAttributeInToken(payload: unknown): apiTypes.SchemaBasedAttributeInToken {
  /** Schema is defined in {@link SCHEMA.definitions.SchemaBasedAttributeInToken } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/SchemaBasedAttributeInToken");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid SchemaBasedAttributeInToken: ' + ajv.errorsText(validator.errors, {dataVar: "SchemaBasedAttributeInToken"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isSchemaBasedAttributeInToken(payload: unknown): payload is apiTypes.SchemaBasedAttributeInToken {
  try {
    validateSchemaBasedAttributeInToken(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateDynamicAttributeInToken(payload: unknown): apiTypes.DynamicAttributeInToken {
  /** Schema is defined in {@link SCHEMA.definitions.DynamicAttributeInToken } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/DynamicAttributeInToken");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid DynamicAttributeInToken: ' + ajv.errorsText(validator.errors, {dataVar: "DynamicAttributeInToken"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isDynamicAttributeInToken(payload: unknown): payload is apiTypes.DynamicAttributeInToken {
  try {
    validateDynamicAttributeInToken(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateTokenAttributeItem(payload: unknown): apiTypes.TokenAttributeItem {
  /** Schema is defined in {@link SCHEMA.definitions.TokenAttributeItem } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/TokenAttributeItem");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid TokenAttributeItem: ' + ajv.errorsText(validator.errors, {dataVar: "TokenAttributeItem"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isTokenAttributeItem(payload: unknown): payload is apiTypes.TokenAttributeItem {
  try {
    validateTokenAttributeItem(payload);
    return true;
  } catch (error) {
    return false;
  }
}

export function validateUniqueTokenV2(payload: unknown): apiTypes.UniqueTokenV2 {
  /** Schema is defined in {@link SCHEMA.definitions.UniqueTokenV2 } **/
  const validator = ajv.getSchema("SCHEMA#/definitions/UniqueTokenV2");
  const valid = validator(payload);
  if (!valid) {
    const error = new Error('Invalid UniqueTokenV2: ' + ajv.errorsText(validator.errors, {dataVar: "UniqueTokenV2"}));
    error.name = "ValidationError";
    throw error;
  }
  return payload;
}

export function isUniqueTokenV2(payload: unknown): payload is apiTypes.UniqueTokenV2 {
  try {
    validateUniqueTokenV2(payload);
    return true;
  } catch (error) {
    return false;
  }
}
